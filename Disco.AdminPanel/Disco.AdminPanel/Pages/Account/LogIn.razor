<link rel="stylesheet" href="/css/login.css" />

@page "/log-in"
@layout EmptyLayout

@using Blazored.Modal.Services
@using Disco.AdminPanel.Interfaces
@using Disco.AdminPanel.Models
@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization;
@using System.Text

@inject HttpClient httpClient
@inject IJSRuntime jsRuntime
@inject IModalService modalService
@inject NavigationManager navigationManager
@inject IAccountService accountService

<section class="vh-100">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                <div class="card shadow-2-strong text-center login-card">
                    <EditForm Model="model" OnValidSubmit="GetUserByEmailAsync" class="card-body py-5 px-md-5 login-card__body">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <div class="form-outline mb-4 text-center">
                           <h1 class="mb-5 login-card__h1">DISCO</h1>
                        </div>
                        <div class="form-outline mb-4 text-center">
                            <h3 class="mb-5 login-card__h3">Log In</h3>
                        </div>
                        <div class="form-outline mb-4 login-card__group">
                            <label class="form-label login-card__label" for="login-email">Email</label>
                            <InputText id="login-email" class="login-card__input form-control form-control-lg" @bind-Value="model.Email" />
                            <ValidationMessage For="() => model.Email"></ValidationMessage>
                        </div>
                        <div class="form-outline mb-4 login-card__group">
                            <label class="form-label login-card__label" for="login-password">Password</label>
                            <InputText type="password" id="login-password" class="login-card__input form-control form-control-lg" @bind-Value="model.Password" />
                            <ValidationMessage For="() => model.Password"></ValidationMessage>
                        </div>
                        <div class="form-outline mt-5 text-center">
                            <input class="login-body__submit" @onclick="GetUserByEmailAsync" type="submit" value="Log In" />
                        </div>
                        <div class="form-outline mt-5 text-center">
                            <a class="login-card__a" @onclick="() => modalService.Show<ForgotPassword>()">Forgot password?</a>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    LogInModel model = new LogInModel();

    public async Task GetUserByEmailAsync(){
        var userResponseModel = await accountService.Login(model);
        if(userResponseModel.User != null){
            await jsRuntime.InvokeVoidAsync("localStorage.setItem", "user", $"{userResponseModel.User}; {userResponseModel.AccessToken}; {userResponseModel.RefreshToken}");

            navigationManager.NavigateTo("/counter");
        }
    }

}
