@using Disco.AdminPanel.Presentation.Interfaces

@inject NavigationManager NavManager;
@inject ILocalStorageService LocalStorageService;
@inject IAccountService AccountService;
<Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @{
                        var token = LocalStorageService.GetStringAsync("accessToken").Result;
                        var tokenExpirce = LocalStorageService.GetStringAsync("accessTokenExpiers").Result;
                        var refreshToken = LocalStorageService.GetStringAsync("refreshToken").Result;

                        if(token == null){
                            NavManager.NavigateTo("/login");
                        }

                        if(string.IsNullOrWhiteSpace(token) || DateTime.UtcNow < DateTime.UtcNow.AddDays(Convert.ToInt32(tokenExpirce))){
                            var response = AccountService.RefreshToken(new Models.Account.RefreshTokenModel { AccessToken = token, RefreshToken = refreshToken }).Result;
                        }

                        NavManager.NavigateTo("/login");
                    }
                </NotAuthorized>
            </Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>
